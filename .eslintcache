[{"C:\\Users\\Administrator\\Desktop\\react\\react-chao\\my-app\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\react\\react-chao\\my-app\\src\\App.js":"2","C:\\Users\\Administrator\\Desktop\\react\\react-chao\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\Administrator\\Desktop\\react\\react-chao\\my-app\\src\\views\\login\\index.js":"4","C:\\Users\\Administrator\\Desktop\\react\\react-chao\\my-app\\src\\views\\login\\RegesterForm.js":"5","C:\\Users\\Administrator\\Desktop\\react\\react-chao\\my-app\\src\\views\\login\\LoginForm.js":"6"},{"size":502,"mtime":1609248349109,"results":"7","hashOfConfig":"8"},{"size":490,"mtime":1609255121712,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":945,"mtime":1609260430017,"results":"11","hashOfConfig":"8"},{"size":3444,"mtime":1609260698397,"results":"12","hashOfConfig":"8"},{"size":3025,"mtime":1609260618291,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"e9lj5q",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\Administrator\\Desktop\\react\\react-chao\\my-app\\src\\index.js",[],["30","31"],"C:\\Users\\Administrator\\Desktop\\react\\react-chao\\my-app\\src\\App.js",[],"C:\\Users\\Administrator\\Desktop\\react\\react-chao\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\Administrator\\Desktop\\react\\react-chao\\my-app\\src\\views\\login\\index.js",["32"],"import React  , {Component , Fragment } from 'react';\r\nimport \"./index.scss\";\r\n\r\n\r\n\r\nimport LoginForm from \"./LoginForm\";\r\nimport RegesterForm from \"./RegesterForm\";\r\n\r\nclass  Index extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            formType : 'login',\r\n        }; \r\n    }\r\n\r\n    switchForm = (value) =>{\r\n        this.setState({\r\n            formType : value\r\n        });\r\n            console.log(value);\r\n    }\r\n\r\n    render (){\r\n        return (\r\n            <div className=\"form-warp\">\r\n                <div>\r\n                    {\r\n                        this.state.formType === \"login\" ? \r\n                        <LoginForm switchForm = {this.switchForm}></LoginForm> \r\n                        : <RegesterForm  switchForm = {this.switchForm}></RegesterForm>\r\n                    }                     \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Index;","C:\\Users\\Administrator\\Desktop\\react\\react-chao\\my-app\\src\\views\\login\\RegesterForm.js",["33"],"import React  , {Component , Fragment } from 'react';\r\nimport \"./index.scss\";\r\nimport { UserOutlined, UnlockOutlined } from '@ant-design/icons';\r\nimport { Form, Input, Button, Checkbox ,  Row, Col } from 'antd';\r\n\r\nclass  RegesterForm extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {};        \r\n    }\r\n\r\n    onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n    }\r\n\r\n    toggleForm = () =>{\r\n        this.props.switchForm(\"login\");\r\n    }\r\n\r\n    render (){\r\n        return (\r\n           <Fragment>           \r\n                <div className=\"form-header\">\r\n                        <h4 className=\"column\">注册</h4>\r\n                        <span onClick={this.toggleForm}>登录</span>\r\n                    </div>\r\n                    <div className=\"form-content\">\r\n                        <Form\r\n                                name=\"normal_login\"\r\n                                className=\"login-form\"\r\n                                initialValues={{ remember: true }}\r\n                                onFinish={this.onFinish}\r\n                                >\r\n                                <Form.Item\r\n                                    name=\"username\"\r\n                                    rules={[{ required: true, message: 'Please input your Username!' }]}\r\n                                >\r\n                                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                                </Form.Item>      \r\n\r\n                                <Form.Item\r\n                                    name=\"password\"\r\n                                    rules={[{ required: true, message: 'Please input your Password!' }]}\r\n                                >\r\n                                    <Input prefix={<UnlockOutlined className=\"site-form-item-icon\" />} placeholder=\"Password\" />\r\n                                </Form.Item>    \r\n\r\n                                <Form.Item\r\n                                    name=\"passwords\"\r\n                                    rules={[{ required: true, message: 'Please input your Passwords' }]}\r\n                                >\r\n                                    <Input prefix={<UnlockOutlined className=\"site-form-item-icon\" />} placeholder=\"Passwords\" />\r\n                                </Form.Item>    \r\n\r\n                                <Form.Item  name=\"Code\"  rules={[{ required: true, message: 'Please input your Code!' }]}  >\r\n                                        <Row gutter={13}>\r\n                                            <Col span={15}><Input prefix={<UnlockOutlined className=\"site-form-item-icon\" />} placeholder=\"Code\" /></Col>\r\n                                            <Col span={9}><Button type=\"danger\" block>获取验证码</Button></Col>\r\n                                        </Row>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>\r\n                                            注 册\r\n                                    </Button>                                   \r\n                                </Form.Item>\r\n                            </Form>       \r\n                </div>\r\n            </Fragment>    \r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default RegesterForm;","C:\\Users\\Administrator\\Desktop\\react\\react-chao\\my-app\\src\\views\\login\\LoginForm.js",["34"],"import React  , {Component , Fragment } from 'react';\r\nimport \"./index.scss\";\r\nimport { UserOutlined, UnlockOutlined } from '@ant-design/icons';\r\nimport { Form, Input, Button, Checkbox ,  Row, Col } from 'antd';\r\n\r\nclass  LoginForm extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {};        \r\n    }\r\n\r\n    onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n    }\r\n\r\n    toggleForm = () =>{\r\n        this.props.switchForm(\"register\");\r\n    }\r\n\r\n    render (){\r\n        return (\r\n           <Fragment>           \r\n                <div className=\"form-header\">\r\n                        <h4 className=\"column\">登录</h4>\r\n                        <span onClick={this.toggleForm}>账号注册</span>\r\n                    </div>\r\n                    <div className=\"form-content\">\r\n                        <Form\r\n                                name=\"normal_login\"\r\n                                className=\"login-form\"\r\n                                initialValues={{ remember: true }}\r\n                                onFinish={this.onFinish}\r\n                                >\r\n                                <Form.Item\r\n                                    name=\"username\"\r\n                                    rules={[{ required: true, message: 'Please input your Username!' }]}\r\n                                >\r\n                                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                                </Form.Item>      \r\n\r\n                                <Form.Item\r\n                                    name=\"password\"\r\n                                    rules={[{ required: true, message: 'Please input your Password!' }]}\r\n                                >\r\n                                    <Input prefix={<UnlockOutlined className=\"site-form-item-icon\" />} placeholder=\"Password\" />\r\n                                </Form.Item>    \r\n\r\n                                <Form.Item  name=\"Code\"  rules={[{ required: true, message: 'Please input your Code!' }]}  >\r\n                                        <Row gutter={13}>\r\n                                            <Col span={15}><Input prefix={<UnlockOutlined className=\"site-form-item-icon\" />} placeholder=\"Code\" /></Col>\r\n                                            <Col span={9}><Button type=\"danger\" block>获取验证码</Button></Col>\r\n                                        </Row>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>\r\n                                            登 录\r\n                                    </Button>                                   \r\n                                </Form.Item>\r\n                            </Form>       \r\n                </div>\r\n            </Fragment>    \r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default LoginForm;",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":30,"nodeType":"41","messageId":"42","endLine":1,"endColumn":38},{"ruleId":"39","severity":1,"message":"43","line":4,"column":31,"nodeType":"41","messageId":"42","endLine":4,"endColumn":39},{"ruleId":"39","severity":1,"message":"43","line":4,"column":31,"nodeType":"41","messageId":"42","endLine":4,"endColumn":39},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation"]